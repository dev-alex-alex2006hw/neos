#!/usr/bin/perl
# Copyright Â© 2013 EDF SA
# Contact:
#       CCN - HPC <dsp-cspit-ccn-hpc@edf.fr>
#       1, Avenue du General de Gaulle
#       92140 Clamart
#
# Authors: Mehdi Dogguy <mehdi.dogguy@edf.fr>
#          Antonio Russo <antonio-externe.russo@edf.fr>
#
# This program is free software; you can redistribute in and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU General Public License for more details. On Calibre
# systems, the full text of the GNU General Public License can be
# found in `/usr/share/common-licenses/GPL'.

use strict;
use Sys::Hostname;
use Neos;

my $job_partition = Neos::get_partition ();
my $firstnode = Neos::first_node ();

if (Neos::is_good_partition($job_partition)) {
    if ($ENV{'ENVIRONMENT'} eq "BATCH") {
        system("scancel", $ENV{'SLURM_JOB_ID'});
    } else {
	my $pid = fork ();
	unless ($pid) {
	    my $xvnc = sprintf(Neos::get_param('cmd'),
			       Neos::get_display (),
			       Neos::get_vncres (),
			       Neos::get_rfbport ()
		);
	    my $cmd = sprintf("ssh localhost -o NoHostAuthenticationForLocalhost=yes \"%s > %s 2>&1 &\" &",
			      $xvnc,
			      Neos::get_param('x_logfile')
		);
	    system ($cmd);
	    if ($firstnode eq hostname) {
		system (sprintf("ssh localhost -o NoHostAuthenticationForLocalhost=yes \"DISPLAY=:%s %s &\" &",
			      Neos::get_display (),
			      Neos::get_param('session_manager')
		     ));
	    }
	}
	exit(0);
    }
}
